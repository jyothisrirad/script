#!/bin/bash

rpool=mnt/tank

if [ ! -f "/sbin/zfs" ]; then
	echo ZFS not install, aborting
	exit
fi

if [ ! -d "/$rpool" ]; then
        echo zpool $rpool not created, aborting
        exit
fi

if [ "root" = $(whoami) ]; then        
        echo "no sync while been root" 
        exit                           
fi                                     

sudo apt install bc
swapsize=$(grep MemTotal /proc/meminfo | awk '{print $2 }' | xargs -I {} echo "1+{}/1024^2" | bc)

addto_fstab() {
	fsfile=/etc/fstab

	if ! sudo grep -Fxq "$*" $fsfile; then
		echo $* | sudo tee -a $fsfile
	fi
}

delfrom_fstab() {
	sudo sed -i "/$1/d" /etc/fstab
}

crontab_status() {
	status=$(crontab -l)
	return $?
}

addto_crontab() {
	cronfile=/var/spool/cron/crontabs/$(whoami)

	if ! crontab_status; then
		echo "" | sudo tee -a $cronfile
		sudo chown $(whoami):crontab $cronfile
	fi
	
	if ! sudo grep -Fxq "$*" $cronfile; then
		echo "$*" | sudo tee -a $cronfile
	fi
}

delfrom_crontab() {
	cronfile=/var/spool/cron/crontabs/$(whoami)

	line=$*
	line=$(echo "$line" | sed 's/\//\\\//g')
	sudo sed -i "/$line/d" $cronfile
}

swap_prep() {
	if [ -d "/dev/zvol/$1/swap" ]; then return; fi
	
	sudo zfs create -V $2G -b $(getconf PAGESIZE) -o compression=zle -o logbias=throughput -o sync=always -o primarycache=metadata -o secondarycache=none -o com.sun:auto-snapshot=false $1/swap

	sudo mkswap -f /dev/zvol/$1/swap

	# echo Manual remove original swap in /etc/fstab
	delfrom_fstab swap
	
	# echo /dev/zvol/$1/swap none swap defaults 0 0 >> /etc/fstab
	addto_fstab /dev/zvol/$1/swap none swap defaults 0 0
	
	sudo swapon -s	
	sudo swapoff /dev/dm-1
	sudo swapon -av
}

zfs_create() {
	if [ -d "/$1" ]; then return; fi
	
	echo Creating $*
	sudo zfs create -o xattr=sa -o compression=lz4 $*
}

move_path_zfs() {
	if [ -d "/$2/$1" ]; then return; fi

	echo moving /$1 to /$2/$1

	zfs_create $2/$1
	
	sudo rsync -avx /$1/* /$2/$1
	
	sudo service pvestatd stop
	sudo rm -rf /$1
	sudo service pvestatd start
	sudo ln -s /$2/$1 /$1
}

addto_sources() {
	sources=/etc/apt/sources.list

	if ! sudo grep -Fxq "$*" $sources; then
		echo $* | sudo tee -a $sources
	fi
}

create_path() {
	if [ -d "/$1" ]; then return; fi
	
	sudo mkdir /$1
}

move_path() {
	if [ -d "/$2/$1" ]; then return; fi

	echo moving /$1 to /$2/$1

	create_path $2/$1
	
	sudo rsync -avx /$1/* /$2/$1
	
	sudo service pvestatd stop
	sudo rm -rf /$1
	sudo service pvestatd start
	sudo ln -s /$2/$1 /$1
}

# echo Create Swap of size $swapsize
# swap_prep tank $swapsize

# zfs_create $rpool/var
create_path $rpool/var
# move_path_zfs var/log $rpool
move_path var/log $rpool
# move_path_zfs var/cache $rpool
move_path var/cache $rpool
# zfs_create $rpool/var/lib
create_path $rpool/var/lib
# move_path_zfs var/lib/vz $rpool
move_path var/lib/vz $rpool

addto_fstab tmpfs /tmp tmpfs defaults,noatime,mode=1777 0 0
#addto_fstab tmpfs /var/spool tmpfs defaults,noatime,mode=1777 0 0
addto_fstab tmpfs /var/tmp tmpfs defaults,noatime,mode=1777 0 0

# zfs_create $rpool/USBROOT
# addto_crontab "# $(basename $0): weekly usbstick backup"
# addto_crontab "0 6 * * 0 /usr/bin/batch < /home/$(whoami)/script/pve/usbbackup"

# zfs_create $rpool/Shares
# zfs_create $rpool/Shares/VM -o recordsize=4k -o sync=disabled
# zfs_create $rpool/Shares/Download -o recordsize=16KB
# sudo zfs set compression=off $rpool/Shares/Download

addto_sources deb http://download.proxmox.com/debian jessie pve-no-subscription
sudo apt install -y openvswitch-switch zfs-zed
