#!/bin/bash

#=================================
localip() {
    sudo ifconfig | grep -Eo 'inet (addr:)?([0-9]*\.){3}[0-9]*' | grep -Eo '([0-9]*\.){3}[0-9]*' | grep -v '127.0.0.1'
}

ddos_status() {
    echo -e Live connections: ${GREEN}$(sudo netstat -natp | wc -l)${NC}
	
    count=$(sudo netstat -tn | grep :22 | wc -l)
    [ "$count" != "0" ] && echo -e Live port 22 connections: ${GREEN}$count ${NC}
    netstat -tn 2>/dev/null | grep :22 | awk '{print $5":"$6}' | cut -d: -f1,3 | sort | uniq -c | sort -nr | head
	
    count=$(sudo netstat -tn | grep :80 | wc -l)
    [ "$count" != "0" ] && echo -e Live port 80 connections: ${GREEN}$count ${NC}
    netstat -tn 2>/dev/null | grep :80 | awk '{print $5":"$6}' | cut -d: -f1,3 | sort | uniq -c | sort -nr | head
	
    count=$(sudo netstat -tn | grep :25565 | wc -l)
    [ "$count" != "0" ] && echo -e Live port 25565 connections: ${GREEN}$count ${NC}
    netstat -tn 2>/dev/null | grep :25565 | awk '{print $5":"$6}' | cut -d: -f1,3 | sort | uniq -c | sort -nr | head
	
	[ -f /proc/net/nf_conntrack ] && count=$(sudo sysctl net.netfilter.nf_conntrack_count | awk '{printf $3}') || count=0
	[ "$count" != "0" ] && max=$(sudo sysctl net.netfilter.nf_conntrack_max | awk '{printf $3}')
    [ "$count" != "0" ] && echo -e net.netfilter.nf_conntrack_count: ${GREEN}$count/$max ${NC}
	
	echo "目前對象 可用對象 對象大小(byte) 分頁數:"
	sudo grep conntrack /proc/slabinfo
	
	[ -f /proc/net/nf_conntrack ] && echo 連線狀態:
	[ -f /proc/net/nf_conntrack ] && sudo cat /proc/net/nf_conntrack | awk '/^.*tcp.*$/ {count[$6]++} END {for(state in count) print state, count[state]}'
	
	[ -f /proc/net/nf_conntrack ] && echo 連線位址 Top 10:
	[ -f /proc/net/nf_conntrack ] && sudo cat /proc/net/nf_conntrack | awk '{print $7}' | cut -d "=" -f 2 | sort | uniq -c | sort -nr | head -n 10

}

#=================================
blockip() {
	sudo route add -host $1 reject
	route_show
}

unblockip() {
	sudo route del -host $1 reject
	route_show
}

route_show() {
	sudo route -n
}

#=================================
pidinfo() {
    pid=$1
    ps aux | grep -v "grep" | grep $pid
    sudo cat /proc/$pid/environ | tr '\0' '\n' | grep "PWD"
}

#=================================
findmyip0() {
	curl https://api.ipify.org && echo 
}

findmyip() {
	curl http://me.gandi.net
}

findsrv() {
	dig srv _minecraft._tcp.$1 | grep IN
}

#=================================
check_version() {
	lsb_release -a
	uname -a
}

#=================================
install_antiddos() {
	# install iptables firewall rules again DDoS
	echo -e ${GREEN}iptables.conf${NC}
	sudo ~/script/mis/iptables.antiddos.sh | sudo tee /etc/iptables.conf
	ls -la /etc/iptables.conf
	
	echo -e ${GREEN}crontab${NC}
	sudo ~/script/mis/iptables.sh install
	sudo crontab -l
	
	# install Kernel system variables again DDoS
	sudo cp ~/script/init.d/sysctl/local.antiddos.conf /etc/sysctl.d/
	
	# CONNTRACK_MAX=$(echo $(grep MemTotal /proc/meminfo|awk '{print $2}')*1024/16384/2 | bc)
	# HASHSIZE=$(echo $CONNTRACK_MAX/4 | bc)
	# file=/etc/sysctl.d/local.antiddos.conf
	# echo $HASHSIZE | sudo tee /sys/module/nf_conntrack/parameters/hashsize
	# [ -f $file ] && sudo sed -i "s/^net.netfilter.nf_conntrack_buckets = .*/net.netfilter.nf_conntrack_buckets = $HASHSIZE/g" $file
	# [ -f $file ] && sudo sed -i "s/^net.netfilter.nf_conntrack_max = .*/net.netfilter.nf_conntrack_max = $CONNTRACK_MAX/g" $file
	
	echo -e ${GREEN}sysctl${NC}
	ls -la /etc/sysctl.d/
	
	sudo sysctl --system
}

check_sysctl() {
    echo -e ${GREEN}=== kernel${NC}
	sudo sysctl kernel.printk
	sudo sysctl kernel.sysrq
	sudo sysctl kernel.shmmax
	sudo sysctl kernel.shmall
	sudo sysctl kernel.core_uses_pid
	sudo sysctl kernel.msgmnb
	sudo sysctl kernel.msgmax
    
    echo -e ${GREEN}=== Turn on SYN-flood protections.${NC}
    sudo sysctl net.ipv4.tcp_syncookies
    
    echo -e ${GREEN}=== Ignore source-routed packets${NC}
    sudo sysctl net.ipv4.conf.all.accept_source_route
    sudo sysctl net.ipv4.conf.default.accept_source_route
    
    echo -e ${GREEN}=== Ignore ICMP redirects from non-GW hosts${NC}
    sudo sysctl net.ipv4.conf.all.accept_redirects
    sudo sysctl net.ipv4.conf.default.accept_redirects
    sudo sysctl net.ipv4.conf.all.secure_redirects
    sudo sysctl net.ipv4.conf.default.secure_redirects
    
    echo -e ${GREEN}=== Do not pass traffic between networks or act as a router${NC}
    sudo sysctl net.ipv4.ip_forward
    sudo sysctl net.ipv4.conf.all.send_redirects
    sudo sysctl net.ipv4.conf.default.send_redirects
    
    echo -e ${GREEN}=== Turn on Source Address Verification in all interfaces to prevent some spoofing attacks.${NC}
    sudo sysctl net.ipv4.conf.all.rp_filter
    sudo sysctl net.ipv4.conf.default.rp_filter
    
    echo -e ${GREEN}=== Ignore ICMP broadcasts to avoid participating in Smurf attacks${NC}
    sudo sysctl net.ipv4.icmp_echo_ignore_broadcasts
    
    echo -e ${GREEN}=== Ignore bad ICMP errors${NC}
    sudo sysctl net.ipv4.icmp_ignore_bogus_error_responses

    echo -e ${GREEN}=== Log spoofed, source-routed, and redirect packets${NC}
    sudo sysctl net.ipv4.conf.all.log_martians
    sudo sysctl net.ipv4.conf.default.log_martians

    echo -e ${GREEN}=== RFC 1337 fix${NC}
    sudo sysctl net.ipv4.tcp_rfc1337

    echo -e ${GREEN}=== Addresses of mmap base, heap, stack and VDSO page are randomized${NC}
    sudo sysctl kernel.randomize_va_space

    echo -e ${GREEN}=== Reboot the machine soon after a kernel panic.${NC}
    sudo sysctl kernel.panic

    echo -e ${GREEN}"=== 不為不請自來(沒有經過三次握手)的數據包關聯nf_conntrack表項"${NC}
    sudo sysctl net.netfilter.nf_conntrack_tcp_loose
    sudo sysctl net.netfilter.nf_conntrack_buckets
    sudo sysctl net.netfilter.nf_conntrack_max
	# sudo sysctl -a | grep conntrack
	# sudo sysctl -a | grep conntrack | grep timeout
}

#=================================
deflect_packet() {
	IP=$1
	PORT=25565
	
	[ -z "$IP" ] && deflect_reset && return
	
	echo -e "=== deflect to ip: "${GREEN}$IP:$PORT${NC}
	
	sudo sysctl -w net.ipv4.ip_forward=1
	
	sudo /sbin/iptables -t nat -A PREROUTING -p TCP -d $IP --dport $PORT -j REDIRECT
}

#=================================
deflect_reset() {
	echo -e "=== deflect to ip: "${GREEN}off${NC}
	sudo sysctl -w net.ipv4.ip_forward=0
	sudo /sbin/iptables -t nat -F
}

#=================================
speed_test() {
	iperf -c $1 -p $2
}

#=================================
speed_host() {
	iperf -s
}

#=================================
. ~/script/minecraft/alias/admin.1.help
# help_hline3 '基本(mis)'

#=================================
alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'
alias egrep='egrep --color=auto'
alias fgrep='fgrep --color=auto'
alias grep='grep --color=auto'
alias l='ls -CF'
alias la='ls -A'
alias ll='ls -alF'
alias ls='ls --color=auto'
alias less='less -R'

#=================================
alias a=alias
alias aed='vi ~/script/mis/alias.mis; are'
alias are='. ~/script/mis/alias.mis'
alias ph='cd ~/script/ssh'
alias pm='cd ~/script/mis'
alias pp='cd ~/script/pve'
alias pl='cd /tmp/log'
alias pc='cd ~/script/minecraft/gcloud'

#=================================
# alias gs='cd ~/script && ./gitsync.sh'
alias gs='~/script/gitsync.sh'

#=================================
help_add 'aaa' '安裝DDoS保護'
alias aaa='install_antiddos'
help_add 'ccc' '檢查sysctl'
alias ccc='check_sysctl'
help_add 'ddd' '檢查連線數'
alias ddd='ddos_status'
help_add 'ddc' '檢查ddos連線'
alias ddc='sudo netstat -antp | grep "^\|\:80\|\:25565"'
help_add 'pid.<pid>' '檢查pid'
alias pid='pidinfo $*'
help_add 'ws' '檢查synproxy'
alias ws='watch -d -n1 cat /proc/net/stat/synproxy'
alias ws2='watch -d -n1 netstat -s'

alias speed='speed_test $*'

#=================================
help_add 'def.<ip>' '封包反射'
alias def='deflect_packet $*'

#=================================
alias block='blockip $*'
alias unblock='unblockip $*'
help_add 'banlist' '檢查封鎖清單'
alias banlist='route_show'
help_add 'banip' '封鎖ip'
alias banip='blockip $*'
help_add 'unbanip' '解除封鎖'
alias unbanip='unblockip $*'

#=================================
alias stop='sudo echo && sudo screen -dmS off shutdown -h now && exit'

#=================================
alias ii='findmyip'
alias srv='findsrv'

#=================================
alias cpu='less /proc/cpuinfo |grep "model name"'

#=================================
alias ver='check_version'
